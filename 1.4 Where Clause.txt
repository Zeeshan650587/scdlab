-- SQL File: where_clause_queries.sql

-- Definition:
-- The WHERE clause is used to filter records based on specified conditions.
-- It is commonly used in SELECT, UPDATE, DELETE statements to retrieve or modify specific data.
-- Conditions in the WHERE clause can use comparison operators, logical operators, and subqueries.

-- Basic WHERE clause usage
SELECT * FROM employees WHERE department_id = 1; -- Retrieves employees who belong to department 1

-- Using WHERE with multiple conditions (AND operator)
SELECT * FROM employees WHERE department_id = 1 AND salary > 60000; -- Retrieves employees in department 1 with a salary above 60,000

-- Using WHERE with OR operator
SELECT * FROM employees WHERE department_id = 1 OR department_id = 2; -- Retrieves employees in either department 1 or department 2

-- Using WHERE with NOT operator
SELECT * FROM employees WHERE NOT department_id = 3; -- Retrieves employees not in department 3

-- Using WHERE with comparison operators
SELECT * FROM employees WHERE salary >= 50000; -- Retrieves employees earning 50,000 or more
SELECT * FROM employees WHERE salary < 40000; -- Retrieves employees earning less than 40,000

-- Using WHERE with BETWEEN for range selection
SELECT * FROM employees WHERE salary BETWEEN 40000 AND 70000; -- Retrieves employees with salaries in the range 40,000 to 70,000

-- Using WHERE with IN to match multiple values
SELECT * FROM employees WHERE department_id IN (1, 3, 5); -- Retrieves employees in departments 1, 3, or 5

-- Using WHERE with LIKE for pattern matching
SELECT * FROM employees WHERE first_name LIKE 'J%'; -- Retrieves employees whose first name starts with 'J'
SELECT * FROM employees WHERE last_name LIKE '%son'; -- Retrieves employees whose last name ends with 'son'
SELECT * FROM employees WHERE first_name LIKE '_a%'; -- Retrieves employees whose second letter in first name is 'a'

-- Using WHERE with IS NULL and IS NOT NULL
SELECT * FROM employees WHERE department_id IS NULL; -- Retrieves employees with no assigned department
SELECT * FROM employees WHERE department_id IS NOT NULL; -- Retrieves employees who have an assigned department

-- Using WHERE with EXISTS for subqueries
SELECT * FROM employees WHERE EXISTS (SELECT 1 FROM departments WHERE departments.department_id = employees.department_id); -- Retrieves employees who belong to an existing department

-- Using WHERE with a subquery
SELECT * FROM employees WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'HR'); -- Retrieves employees in the HR department

-- Using WHERE with ORDER BY
SELECT * FROM employees WHERE salary > 50000 ORDER BY salary DESC; -- Retrieves employees earning more than 50,000, sorted by salary in descending order

-- Using WHERE with LIMIT to restrict the number of results
SELECT * FROM employees WHERE department_id = 1 LIMIT 5; -- Retrieves only the first 5 employees from department 1

-- Using WHERE with CASE for conditional filtering
SELECT first_name, last_name, salary 
FROM employees 
WHERE (CASE 
    WHEN department_id = 1 THEN salary > 70000 
    WHEN department_id = 2 THEN salary > 50000 
    ELSE salary > 40000 
END); -- Retrieves employees based on salary conditions depending on their department
